# [TITLE]   Generate Animation
# [INFO]    The workflow defined in this file converts contributions to GitHub into animation.
# [MORE]    The workflow in this file is available in the "Platane/snk" repository.
# [LINK]    https://github.com/Platane/snk

# [SYNTAX]  name
# [INFO]    The name of your workflow. GitHub displays the names of your workflows on your
# [MORE]    repository.
name: Generate Animation

# [SYNTAX]  on.schedule
# [INFO]    You can schedule a workflow to run at specific UTC times using POSIX cron syntax.
# [MORE]    Scheduled workflows run on the latest commit on the default or base branch. 
# [VALUE]   cron
# [INFO]    Cron syntax has five fields separated by a space, and each field represents a unit
# [MORE]    of time. The meanings of the expressions from left to right.
# [PARAM]   1st Parameter: minute (0-59)
# [PARAM]   2nd Parameter: hour (0-23)
# [PARAM]   3rd Parameter: day of the month (1-31)
# [PARAM]   4th Parameter: month (1-12 or JAN/DEC)
# [PARAM]   5th Parameter: day of the week (0-6 or SUN-SAT)
# [SPEC]    '*': Any value
# [SPEC]    ',': Value list separator
# [SPEC]    '-': Range of values
# [SPEC]    '/': Step values
  
# [SYNTAX]  workflow_dispatch
# [INFO]    Allows manual triggering of the workflow.
 
# [SYNTAX]  on.<push|pull_request>.<branches|tags>
# [SYNTAX]  branches
# [INFO]    When using the push and pull_request events, you can configure
# [MORE]    a workflow to run on specific branches or tags. For a pull_request
# [MORE]    event, only branches and tags on the base are evaluated.
# [VALUE]  "main"
# [INFO]    Push events on main branch
on:
  schedule: [{cron: "0 0 * * *"}]
  workflow_dispatch:
  push:
    branches:
      - main

# [SYNTAX]  jobs
# [SYNTAX]  jobs.<job_id>.runs-on
# [SYNTAX]  jobs.<job_id>.timeout-minutes
# [SYNTAX]  jobs.<job_id>.steps[*].uses
# [SYNTAX]  jobs.<job_id>.steps[*].id
# [SYNTAX]  jobs.<job_id>.steps[*].with.args
# [SYNTAX]  jobs.<job_id>.steps[*].env
# [INFO]    A workflow run is made up of one or more jobs. Jobs run in parallel by
# [MORE]    default. To run jobs sequentially, you can define dependencies on other
# [MORE]    jobs using the jobs.

# [SYNTAX]  jobs.<job_id>.runs-on
# [INFO]    The type of machine to run the job on. The machine can be either a
# [MORE]    GitHub-hosted runner or a self-hosted runner.

# [SYNTAX]  jobs.<job_id>.timeout-minutes
# [INFO]    The maximum number of minutes to let a job run before GitHub automatically
# [MORE]    cancels it. 

# [SYNTAX]  jobs.<job_id>.steps[*].uses
# [INFO]    Selects an action to run as part of a step in your job. An action is a
# [MORE]    reusable unit of code. You can use an action defined in the same repository
# [MORE]    as the workflow, a public repository, or in a published Docker container image.

# [SYNTAX]  jobs.<job_id>.steps[*].id
# [INFO]    A unique identifier for the step. You can use the id to reference the step
# [MORE]    in contexts.

# [SYNTAX]  jobs.<job_id>.steps[*].with.args
# [INFO]    A string that defines the inputs for a Docker container. GitHub passes the args
# [MORE]    to the container's ENTRYPOINT when the container starts up. An array of strings
# [MORE]    is not supported by this parameter.

# [SYNTAX]  jobs.<job_id>.steps[*].env
# [INFO]    Sets environment variables for steps to use in the runner environment. You can
# [MORE]    also set environment variables for the entire workflow or a job.
jobs:
  # <job-id>: generate-animation
  generate-animation:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - uses: Platane/snk@master
        id: snake-gif
        with:
          github_user_name: sercansebetci
          svg_out_path: dist/github-contribution-grid-snake.svg
      - uses: crazy-max/ghaction-github-pages@v2.1.3
        with:
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACTION_TOKEN }}
